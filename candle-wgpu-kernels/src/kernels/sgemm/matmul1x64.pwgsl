#define TSM 1u                     // The tile-size in dimension M
#define TSN 64u                     // The tile-size in dimension N
#define TSK 64u                     // The tile-size in dimension K
#define WPTM 1u                     // The work-per-thread in dimension M
#define WPTN 1u                     // The work-per-thread in dimension N
#define PREFETCH 1u

#define WIDTHA 1u
#define WIDTHB 1u

#include "matmulHelper.pwgsl"

//This is a shader designed for when k_stride (of matrix B) is one. 
//Loading input B into shared memory is theoretically not necessary (since each value is still read at most once), 
//but it is beneficial in this case, as adjacent threads on input B can read adjacent values from memory).
//As 1x64b is faster this shader is not needed any more.
@compute @workgroup_size(RTSN, RTSM, 1)
fn matmul(@builtin(workgroup_id) group_id: vec3<u32>, @builtin(local_invocation_id) local_id: vec3<u32>) {
    generic_sgemm(group_id, local_id);
}